{"ast":null,"code":"var _jsxFileName = \"/Users/deethegreat/Desktop/2020-Coding-Content/Twitter-MERN-Clone/twitter-clone/client/src/components/Profile/Profile.js\";\nimport React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { getPostsByUserId, getUserProfile } from \"../../actions/profileActions\";\nimport Post from \"../Posts/Post\";\nimport LoadingPosts from \"../Posts/LoadingPosts\";\nconst styles = {};\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.getPostsByUserId(this.props.match.params.userId);\n    this.props.getUserProfile(this.props.match.params.userId);\n  }\n\n  render() {\n    const {\n      classes,\n      loadingPosts,\n      loadingProfile,\n      list,\n      auth,\n      user,\n      profile\n    } = this.props;\n    let items;\n    items = list && list.map(el => React.createElement(Post, {\n      key: el._id,\n      post: el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n    let profileInfo;\n\n    if (profile && items) {\n      profileInfo = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, profile.login), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, profile.email), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, items.length, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Posts\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, profile.followers.length, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Followers\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, profile.following.length, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Following\"))));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, loadingPosts ? React.createElement(LoadingPosts, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }) : items, loadingProfile ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Loading\") : profileInfo);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  loadingPosts: state.post.loading,\n  list: state.post.list,\n  profile: state.profile.user,\n  loadingProfile: state.profile.loading,\n  auth: state.auth,\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps, {\n  getPostsByUserId,\n  getUserProfile\n})(withStyles(styles)(Profile));","map":{"version":3,"sources":["/Users/deethegreat/Desktop/2020-Coding-Content/Twitter-MERN-Clone/twitter-clone/client/src/components/Profile/Profile.js"],"names":["React","Component","withStyles","connect","getPostsByUserId","getUserProfile","Post","LoadingPosts","styles","Profile","constructor","props","componentDidMount","match","params","userId","render","classes","loadingPosts","loadingProfile","list","auth","user","profile","items","map","el","_id","profileInfo","login","email","length","followers","following","mapStateToProps","state","post","loading"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { getPostsByUserId, getUserProfile } from \"../../actions/profileActions\";\nimport Post from \"../Posts/Post\";\nimport LoadingPosts from \"../Posts/LoadingPosts\";\n\nconst styles = {};\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.getPostsByUserId(this.props.match.params.userId);\n    this.props.getUserProfile(this.props.match.params.userId);\n  }\n\n  render() {\n    const {\n      classes,\n      loadingPosts,\n      loadingProfile,\n      list,\n      auth,\n      user,\n      profile\n    } = this.props;\n\n    let items;\n    items = list && list.map(el => <Post key={el._id} post={el} />);\n    let profileInfo;\n    if (profile && items) {\n      profileInfo = (\n        <div>\n          <h1>{profile.login}</h1>\n          <div>{profile.email}</div>\n          <div>\n            <div>\n              {items.length}\n              <span>Posts</span>\n            </div>\n            <div>\n              {profile.followers.length}\n              <span>Followers</span>\n            </div>\n            <div>\n              {profile.following.length}\n              <span>Following</span>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {loadingPosts ? <LoadingPosts /> : items}\n        {loadingProfile ? <div>Loading</div> : profileInfo}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loadingPosts: state.post.loading,\n  list: state.post.list,\n  profile: state.profile.user,\n  loadingProfile: state.profile.loading,\n  auth: state.auth,\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps, { getPostsByUserId, getUserProfile })(\n  withStyles(styles)(Profile)\n);\n"]},"metadata":{},"sourceType":"module"}