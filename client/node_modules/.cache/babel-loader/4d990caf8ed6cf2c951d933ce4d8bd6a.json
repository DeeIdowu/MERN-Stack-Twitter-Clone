{"ast":null,"code":"var _jsxFileName = \"/Users/deethegreat/Desktop/2020-Coding-Content/Twitter-MERN-Clone/twitter-clone/client/src/components/Posts/ListPosts.js\";\nimport React, { Component } from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport AddPost from \"./AddPost\";\nimport Post from \"./Post\";\nimport { connect } from \"react-redux\";\nimport { getPosts, getPostsByFollowingUsers } from \"../../actions/postActions\";\nimport LoadingPosts from \"../Posts/LoadingPosts\";\n\nclass ListPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allPosts: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      allPosts: event.target.checked\n    });\n  }\n\n  componentDidMount() {\n    this.props.getPosts();\n  }\n\n  componentDidUpate(prevProps, prevState) {\n    if (prevState.allPosts !== this.state.allPosts) {\n      this.state.allPosts ? this.props.getPosts() : this.props.getPostsByFollowingUsers();\n    }\n  }\n\n  render() {\n    const {\n      list,\n      loading\n    } = this.props;\n    const {\n      allPosts\n    } = this.state;\n    const items = list && list.map(el => React.createElement(Post, {\n      key: el._id,\n      post: el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(AddPost, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        checked: allPosts,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }),\n      label: allPosts ? \"All Posts\" : \"From following users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), loading ? React.createElement(LoadingPosts, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }) : items, React.createElement(Post, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  list: state.post.list,\n  loading: state.post.loading\n});\n\nexport default connect(mapStateToProps, {\n  getPosts,\n  getPostsByFollowingUsers\n})(ListPost);","map":{"version":3,"sources":["/Users/deethegreat/Desktop/2020-Coding-Content/Twitter-MERN-Clone/twitter-clone/client/src/components/Posts/ListPosts.js"],"names":["React","Component","Switch","FormControlLabel","AddPost","Post","connect","getPosts","getPostsByFollowingUsers","LoadingPosts","ListPost","constructor","props","state","allPosts","handleChange","bind","event","setState","target","checked","componentDidMount","componentDidUpate","prevProps","prevState","render","list","loading","items","map","el","_id","mapStateToProps","post"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,wBAAnB,QAAmD,2BAAnD;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;AAEA,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AAC/BU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,QAAQ,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAAzB,KAAd;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,KAAL,CAAWL,QAAX;AACD;;AAEDe,EAAAA,iBAAiB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACtC,QAAIA,SAAS,CAACV,QAAV,KAAuB,KAAKD,KAAL,CAAWC,QAAtC,EAAgD;AAC9C,WAAKD,KAAL,CAAWC,QAAX,GACI,KAAKF,KAAL,CAAWL,QAAX,EADJ,GAEI,KAAKK,KAAL,CAAWJ,wBAAX,EAFJ;AAGD;AACF;;AAEDiB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAoB,KAAKf,KAA/B;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,UAAMe,KAAK,GAAGF,IAAI,IAAIA,IAAI,CAACG,GAAL,CAASC,EAAE,IAAI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,EAAE,CAACC,GAAd;AAAmB,MAAA,IAAI,EAAED,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf,CAAtB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,gBAAD;AACE,MAAA,OAAO,EAAE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAEhB,QAAjB;AAA2B,QAAA,QAAQ,EAAE,KAAKC,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADX;AAEE,MAAA,KAAK,EAAED,QAAQ,GAAG,WAAH,GAAiB,sBAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAMGa,OAAO,GAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAsBC,KANhC,EAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAWD;;AA1C8B;;AA6CjC,MAAMI,eAAe,GAAGnB,KAAK,KAAK;AAChCa,EAAAA,IAAI,EAAEb,KAAK,CAACoB,IAAN,CAAWP,IADe;AAEhCC,EAAAA,OAAO,EAAEd,KAAK,CAACoB,IAAN,CAAWN;AAFY,CAAL,CAA7B;;AAKA,eAAerB,OAAO,CAAC0B,eAAD,EAAkB;AAAEzB,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAlB,CAAP,CACbE,QADa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport AddPost from \"./AddPost\";\nimport Post from \"./Post\";\nimport { connect } from \"react-redux\";\nimport { getPosts, getPostsByFollowingUsers } from \"../../actions/postActions\";\nimport LoadingPosts from \"../Posts/LoadingPosts\";\n\nclass ListPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      allPosts: true\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ allPosts: event.target.checked });\n  }\n\n  componentDidMount() {\n    this.props.getPosts();\n  }\n\n  componentDidUpate(prevProps, prevState) {\n    if (prevState.allPosts !== this.state.allPosts) {\n      this.state.allPosts\n        ? this.props.getPosts()\n        : this.props.getPostsByFollowingUsers();\n    }\n  }\n\n  render() {\n    const { list, loading } = this.props;\n    const { allPosts } = this.state;\n    const items = list && list.map(el => <Post key={el._id} post={el} />);\n    return (\n      <div>\n        <AddPost />\n        <FormControlLabel\n          control={<Switch checked={allPosts} onChange={this.handleChange} />}\n          label={allPosts ? \"All Posts\" : \"From following users\"}\n        />\n        {loading ? <LoadingPosts /> : items}\n        <Post />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  list: state.post.list,\n  loading: state.post.loading\n});\n\nexport default connect(mapStateToProps, { getPosts, getPostsByFollowingUsers })(\n  ListPost\n);\n"]},"metadata":{},"sourceType":"module"}